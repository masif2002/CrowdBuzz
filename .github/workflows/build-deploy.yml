name: Build and deploy

on: [push]

jobs:
  build: #job name - user defines
    
    environment:
      name: development
    env:
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB:  ${{secrets.DATABASE_NAME}}_tests
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    runs-on: ubuntu-latest
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Setting up python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9' 
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: tests with pytest
        run: |
          pip install pytest
          pytest
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-deploy:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-deploy:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi-deploy:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    
    environment: 
      name: production
    steps:
    - name: Pulling git repo
      uses: actions/checkout@v2
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}

    # - name: deploying in ubuntu
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.UBUNTU_HOST }}
    #     username: ${{ secrets.UBUNTU_USERNAME }}
    #     password: ${{ secrets.UBUNTU_PASSWORD }}
    #     script: |
    #       cd app/src
    #       git pull
    #       echo ${{ secrets.UBUNTU_PASSWORD }} | sudo systemctl restart api 